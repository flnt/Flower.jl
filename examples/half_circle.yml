flower:
  physics:
    #Coefficients for Butler-volmer
    alpha_a: 0.5
    alpha_c: 0.5
    CFL:  0.5
    # Species        H2      KOH    H2O
    concentration0: [1.6e-1, 6.7e3, 4.9e4]
    electrolysis_reaction: "Butler_no_concentration"
    # Species         H2      KOH     H2O
    diffusion_coeff: [5.8e-9, 3.2e-9, 3.2e-9]
    end_time: 7.3 #s
    Faraday: 9.64853321233100184e4 #C⋅mol−1
    i0: 1.0
    intfc_x: 0.0 # x coordinate of bubble center
    intfc_y: 5.0e-5 # y coordinate of bubble center
    # KOHwtpercent: 30
    mu_cin1: 6.7e-7
    mu_cin2: 6.7e-7 #m^2/s
    MWH2: 2.01568e-3 #kg/mol
    nb_levelsets: 1
    nb_transported_scalars: 3
    #Electric potential
    phi_ele0: 0.0
    phi_ele1: -0.6
    pres0:  0.0 #1e5
    radius: 3.0e-6 #initial radius
    ref_length: 1e-4
    rho1: 1258.0 #liquid
    rho2: 0.069575 #gaz
    #TODO need for 80°C, check with other study
    #"0.7016E-01" in \citet{cohnTABLETHERMODYNAMICPROPERTIES1963} H2
    # Linear interpolation between 350 and 360
    # 350 360 353 B 0.13841 353 350 360
    # 7.02E-02 6.82E-02 -0.00194999999999999 A -0.000194999999999999 0.069575 0.07016 0.06821
    Ru: 8.314
    sigma: 7.7e-2
    temperature0: 353.0
    v_inlet: 6.7e-4

  mesh:
    nx: 128
    ny: 128
    xmin: 0
    xmax: 1e-4
    ymin: 0 
    ymax: 1e-4
  simulation:
    # activate_interface: false
    activate_interface: 1
    adapt_timestep_mode: 3 #fixed timestep
    concentration_check_factor: 1e-4
    convection_Cdivu: 0
    electrolysis_phase_change_case: "none" #no phase change
    # electrolysis_phase_change_case: "Khalighi" #integration on whole surface to get a radius
    # electrolysis_phase_change_case: "levelset" # local
    eps: 1e-12 #eps for small numbers
    epsilon: 0.05 #cut small cells
    epsilon_mode: 2 #way to handle epsilon
    imposed_velocity: "none"
    dt0: 3.125e-6 #first timestep
    max_iter: 10 #maximum number of iterations
    mode_2d: 3
    # mode_2d = 1 #use equivalent cylinder
    # mode_2d = 2 #mol/meter 
    # mode_2d = 3 #mol/meter with xcoord and ycoord parameters for LS definition

    name: "half_circle"
    non_dimensionalize: 0 # 0: NS equations as is (without non_dimensionalization)
    null_space: 0 #method for null space, matrix diagonal
    prediction: 0 #pressure-velocity coupling
    # prediction = 0
    # prediction = 1
    # prediction = 2
    # prediction = 3 # PIII in Brown's article

    show_every: 1
    debug: "scalar_testing" #"scalar_debug" 
    time_scheme: FE #Forward Euler
    # time_scheme: CN

plot:
  cbarlabel: "" #["u","v"]
  cmap: "viridis"
  color_line: "k" #"w" #"k"
  fig_fraction: 1.0 #0.5
  figures:
      - var: velocity_x
        file: velocity_vectors
        plot_levelset: True
        skip_every: 12
        xlim: [0,100]
        ylim: [0,100]
        quiverkey: True 
        quiver_unit: m/s #given value v_inlet
        quiver_x: 0.7
        quiver_y: 0.97
        linewidth: 1
        linestyle: 'dotted'

      - var: i_current_x
        file: current_lines
        xlim: [0,100]
        ylim: [0,100]

      - var: v_1D
        file: v_LS
        cbarlabel: v
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: True
        plot_mode: contourf
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        linewidth: 0.5
        linestyle: 'dotted'

      - var: mass_flux
        file: mass_flux
        cbarlabel: mass_flux
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: True
        plot_mode: contourf
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        linewidth: 1
        linestyle: None

      # - var: trans_scal_1D_H2
      #   file: trans_scal_1D_H2
      #   cbarlabel: '$\text{Concentration} H_2$'
      #   isocontour: False
      #   levels: 10
      #   plot_bc: True
      #   plot_grid: True
      #   plot_levelset: False
      #   plot_mode: contourf
      #   range: [0,1e-4]
      #   xlim: [0,100]
      #   ylim: [0,100]
      #   linewidth: 1
      #   linestyle: None
      
      # - var: trans_scal_1D_H2_1DT
      #   file: trans_scal_1D_H2_zoom
      #   field_index: 1 # 1 for bulk, 2 for 1st interface
      #   cbarlabel: '$\text{Concentration} H_2$'
      #   fontsize: 4
      #   isocontour: False
      #   levels: 10
      #   plot_bc: True
      #   plot_grid: True
      #   plot_levelset: False
      #   plot_mode: colormesh
      #   print_mode: "val"
      #   range: [0,1e-4]
      #   xlim: [0,100]
      #   ylim: [0,100]
      #   linewidth: 1
      #   linestyle: None
      #   zoom: [[0,5],[0,5]]


      - var: concentration_H2_1DT
        file: concentration_H2
        cbarlabel: '$\text{Concentration} H_2 \ce{H2}$'
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: True
        plot_mode: contourf
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        linewidth: 1
        linestyle: None

      - var: concentration_KOH_1DT
        file: concentration_KOH
        cbarlabel: '$\text{Concentration} KOH$'
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: True
        plot_mode: contourf
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        linewidth: 1
        linestyle: None

      - var: concentration_H2O_1DT
        file: concentration_H2O
        cbarlabel: '$\text{Concentration} H_2O$'
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: True
        plot_mode: contourf
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        linewidth: 1
        linestyle: None

        #Zoom

      - var: v_1D
        file: v_zoom
        cbarlabel: v
        fontsize: 4
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: False
        plot_mode: pcolormesh #contourf
        print_mode: "val"
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        zoom: [[0,5],[0,5]]
        color_annot_bc: w
        color_annot_bulk: w

      - var: concentration_H2_1DT
        file: concentration_H2_zoom
        field_index: 1
        cbarlabel: '$\text{Concentration} H_2$'
        fontsize: 4
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: False
        plot_mode: pcolormesh #contourf
        print_mode: "val"
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        zoom: [[0,5],[0,5]]
        color_annot_bc: w
        color_annot_bulk: w



  films:
      - var: v_1D
        file: v_LS
        cbarlabel: v
        img_format: mp4
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: True
        plot_mode: contourf
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        linewidth: 1
        linestyle: None

      - var: concentration_H2_1DT 
        file: concentration_H2
        cbarlabel: H2 #'$Concentration H_2$'
        img_format: mp4
        isocontour: False
        levels: 10
        plot_bc: True
        plot_grid: True
        plot_levelset: True
        plot_mode: contourf
        range: [0,1e-4]
        xlim: [0,100]
        ylim: [0,100]
        linewidth: 1
        linestyle: None
        

        
  dpi: 300
  img_format: "pdf"
  isocontour: false
  latex_frame_height: 220 # 261.20912 #228.4378 #pt #beamer
  latex_frame_width: 398.3386
  #do not plot 2D figure, used in special plots (velocity vectors and current lines):
  no_2D_plot: ["velocity_x","velocity_y","i_current_x","i_current_y"] 
  pdi: 1 #1: pdi activated
  quiver_scale: 1e-4
  quiver_scale_unit: xy #None
  scale_time: 1e-3
  scale_vel: 1e-4 
  scale_x: 1e-6
  scale_y: 1e-6
  theta1: 0
  theta2: 90
  ticks_x: 0:20:100
  ticks_y: 0:20:100
  unit_time: ms
  write_h5: 0
  
  plot_grid: false
  plot_levelset: true
  plot_movies : false
  plot_R : false
  #debug Levelset
  plotcase : "none"
  #plotcase : "circle"
  plot_current_wall : false
  # plot_current_wall : true
  plot_interface : false
  # plot_interface : true 
  plot_mode: "pcolormesh"
  fontsize: 2
  print_mode: "val"
  plotbc: true
  prefix: "./"


#TODO call compute_grad_phi_ele! only when needed
#TODO call us, vs interpolation only when needed
#TODO sparse data (H5 fill value or chunked ?)
#TODO LS could be sparse too
#TODO struct grid_u.LS[iLS].u[:,:] more difficult than [:,:,:]
#TODO fig size

   
pdi:
  metadata: # type of small values for which PDI keeps a copy
    nx: int #Domain size per proc
    ny: int #Domain size per proc
    mpi_max_coords_x: int #MPI decomposition
    mpi_max_coords_y: int #MPI decomposition
    mpi_coords_x: int #MPI coordinate of the current process 
    mpi_coords_y: int #MPI coordinate of the current process 
    time: double #Time
    nstep: int #Index for naming files
    nb_transported_scalars: int 
    nb_levelsets: int 
    radius: double
  data: # values for which PDI does not keep a copy
    #in Flower: zeros((n.nLS + 1) * g.ny * g.nx + 2 * g.nx + 2 * g.ny)
    #Field of the current subdmain
    #Bulk, interface and border u velocity, ...
    # u grid nx+1, ny
    # v grid nx, ny
    # p grid (scalar): nx, ny
    # In Flower : vec "1D" bulk: 1:nx*ny, ith levelset: ...i*ny*nx 

    # stored in 1D
    u_1D: { size: '($nb_levelsets + 1) * ($ny) * ($nx+1) + 2 * ($nx+1) + 2 * $ny', type: array, subtype: double } 
    v_1D: { size: '($nb_levelsets + 1) * ($ny+1) * ($nx) + 2 * ($nx) + 2 * ($ny+1)', type: array, subtype: double } 
    # trans_scal_1D: { size: ['($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny','$nb_transported_scalars'], type: array, subtype: double } 
    trans_scal_1DT: { size: ['$nb_transported_scalars','($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny'], type: array, subtype: double } 
    phi_ele_1D: { size: '($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny', type: array, subtype: double } 
    # trans_scal_1D_H2: { size: '($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny', type: array, subtype: double } 
    # trans_scal_1D_KOH: { size: '($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny', type: array, subtype: double } 
    # trans_scal_1D_H2O: { size: '($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny', type: array, subtype: double } 

    # stored in 2D
    i_current_x: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    i_current_y: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    levelset_p: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    levelset_u: { size: [ '$nx+1', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    levelset_v: { size: [ '$nx', '$ny+1' ], type: array, subtype: double } #Field of the current subdmain
    velocity_x: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    velocity_y: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    mass_flux: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    mass_flux_bulk: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    mass_flux_border: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    mass_flux_intfc: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    
   
   # To save only bulk field, with u given in Flower
    # u: { size: [ '$nx+1', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    # v: { size: [ '$nx', '$ny+1' ], type: array, subtype: double } #Field of the current subdmain
    # trans_scal: { size: [ '$nx', '$ny','$nb_transported_scalars' ], type: array, subtype: double } #Field of the current subdmain
    # phi_ele: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    # iu: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain
    # iv: { size: [ '$nx', '$ny' ], type: array, subtype: double } #Field of the current subdmain

  plugins:
    trace: ~
    pycall:
      on_event:
        testing: #python event to plot with matplotlib
          exec: from plot_pdi import plot_bc2; plot_bc2()
        # write_data:
        #   with: { iter_id: $nstep, source_field: $main_field }
        #     exec: |
        #       import numpy as np
        #       if 0 < iter_id < 4:
        #           transformed_field = np.sqrt(source_field[1:-1,1:-1])
        #           pdi.expose('transformed_field', transformed_field, pdi.OUT)  
    # mpi:

    #TODO careful: when to update nstep so that stored in right file with multi expose
    decl_hdf5: #Writing in hdf5
      # - file: results/data_${nstep:08}_${mpi_coords_x:02}_${mpi_coords_y:02}.h5 #Name of the file test.h5
      - file: flower_${nstep:08}.h5 #Name of the file test.h5
        collision_policy: write_into
        on_event: write_data
        # datasets: #Dataset we are writing in: the whole solution
        #   data:
        #     type: array
        #     subtype: double
        #     size: ['$nx*$mpi_max_coords_x', '$ny*$mpi_max_coords_y']
        # when: #"$nstep%50 = 0"
        write: [u_1D,v_1D,time,nstep,phi_ele_1D,velocity_x,velocity_y,i_current_x,i_current_y]
        #,trans_scal_1D_H2,trans_scal_1D_KOH,trans_scal_1D_H2O] #,levelset_p,levelset_u,levelset_v]

      - file: flower_${nstep:08}.h5 #Name of the file test.h5
        collision_policy: write_into
        on_event: write_data_start_loop
        # datasets: #Dataset we are writing in: the whole solution
        #   data:
        #     type: array
        #     subtype: double
        #     size: ['$nx*$mpi_max_coords_x', '$ny*$mpi_max_coords_y']
        # when: #"$nstep%50 = 0"
        write: [levelset_p,levelset_u,levelset_v,radius]

      #write mass flux used in phase change
      - file: flower_${nstep:08}.h5 #Name of the file test.h5
        collision_policy: write_into
        on_event: write_mass_flux
        # datasets: #Dataset we are writing in: the whole solution
        #   data:
        #     type: array
        #     subtype: double
        #     size: ['$nx*$mpi_max_coords_x', '$ny*$mpi_max_coords_y']
        # when: #"$nstep%50 = 0"
        write: [mass_flux,mass_flux_bulk,mass_flux_border,mass_flux_intfc]

        
      #write cconcentration for H2 only : data selection 
      - file: flower_${nstep:08}.h5 #Name of the file test.h5
        collision_policy: write_into
        on_event: write_data
        datasets: # a list of datasets inside the file created on first access
          #*** define the datasets for main_field
          concentration_H2_1DT: { type: array, subtype: double, size:  [1,'($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny'] }
        write: 
          trans_scal_1DT: # the name of the data to write
            dataset: concentration_H2_1DT
            memory_selection: #only H2O
              size:  [1,'($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny']
              start: [0,0]

      - file: flower_${nstep:08}.h5 #Name of the file test.h5
        collision_policy: write_into
        on_event: write_data
        datasets: # a list of datasets inside the file created on first access
          #*** define the datasets for main_field
          concentration_KOH_1DT: { type: array, subtype: double, size:  [1,'($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny'] }
        write: 
          trans_scal_1DT: # the name of the data to write
            dataset: concentration_KOH_1DT
            memory_selection: #only H2O
              size:  [1,'($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny']
              start: [1,0]

      - file: flower_${nstep:08}.h5 #Name of the file test.h5
        collision_policy: write_into
        on_event: write_data
        datasets: # a list of datasets inside the file created on first access
          #*** define the datasets for main_field
          concentration_H2O_1DT: { type: array, subtype: double, size:  [1,'($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny'] }
        write: 
          trans_scal_1DT: # the name of the data to write
            dataset: concentration_H2O_1DT
            memory_selection: #only H2O
              size:  [1,'($nb_levelsets + 1) * ($ny) * ($nx) + 2 * ($nx) + 2 * $ny']
              start: [2,0]


# Useful links:
# https://github.com/pdidev/tutorial
